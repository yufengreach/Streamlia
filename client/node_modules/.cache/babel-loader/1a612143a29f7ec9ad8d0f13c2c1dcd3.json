{"ast":null,"code":"var _jsxFileName = \"/Users/yufengliureach/projects/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return \"Are you sure you want to delete the stream with the title: \".concat(this.props.stream.title);\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/yufengliureach/projects/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,eAAxC;;AAGA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAGDC,EAAAA,aAAa,GAAG;AACZ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADJ;AAMH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACpB,aAAO,8CAAP;AACH;;AAED,gFAAqE,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAvF;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACM,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN;AASH;;AAjCsC;;AAoC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAACN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAACf,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAsDC,YAAtD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {fetchStream, deleteStream} from '../../actions';\n\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n\n    renderActions() {\n        return (\n            <React.Fragment>\n              <button className=\"ui button negative\">Delete</button>\n              <button className=\"ui button\">Cancel</button>\n            </React.Fragment>\n        );\n    } \n\n    renderContent() {\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream?'\n        }\n\n        return `Are you sure you want to delete the stream with the title: ${this.props.stream.title}`\n    }\n    \n    render() {\n        return (\n              <Modal \n                title=\"Delete Stream\" \n                content={this.renderContent()} \n                actions={this.renderActions()} \n                onDismiss={() => history.push('/')}\n              />\n           \n        );\n    }    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streams[ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}