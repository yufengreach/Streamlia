{"ast":null,"code":"var _jsxFileName = \"/Users/yufengliureach/projects/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '615016005098-bf31vs0h0bj0efuvprkvpog0ecm5dr04.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); //this.setState({isSignedIn: this.auth.isSignedIn.get()});\n\n        this.onAuthChange();\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"I dont know if we are signed in\");\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"I am signed in!\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \" I am not signed in\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/yufengliureach/projects/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","setState","auth","get","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAACC,MAAAA,UAAU,EAAE;AAAb,KAD6B;;AAAA,SAiBrCC,YAjBqC,GAiBtB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAACF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAb,OAAd;AACH,KAnBoC;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADU,CAEV;;AACA,aAAKd,YAAL;AACA,aAAKE,IAAL,CAAUH,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAMDgB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACH,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH,KAFM,MAEA;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACH;;AAjCoC;;AAoCzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = {isSignedIn: null};\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '615016005098-bf31vs0h0bj0efuvprkvpog0ecm5dr04.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                //this.setState({isSignedIn: this.auth.isSignedIn.get()});\n                this.onAuthChange();\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = () => {\n        this.setState({isSignedIn: this.auth.isSignedIn.get()});\n    };\n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return <div>I dont know if we are signed in</div>\n        } else if (this.state.isSignedIn) {\n            return <div>I am signed in!</div>\n        } else {\n            return <div> I am not signed in</div>\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}