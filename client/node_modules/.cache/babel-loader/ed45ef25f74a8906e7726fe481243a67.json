{"ast":null,"code":"var _jsxFileName = \"/Users/yufengliureach/projects/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    //console.log(this.props.streams);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapToStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    //Object to Array\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapToStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/yufengliureach/projects/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","id","title","description","render","mapToStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAEDK,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IAAY;AACtC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,MAAM,CAACE,KADZ,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BF,MAAM,CAACG,WAArC,CAFJ,CAFJ,CADJ;AAUH,KAXM,CAAP;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKP,UAAL,EAAjC,CAFJ,CADJ;AAMH;;AA7BoC;;AAiCzC,MAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHR,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,OAApB,CADN;AACmC;AACtCW,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAepB,OAAO,CAACc,iBAAD,EAAoB;AAAEb,EAAAA;AAAF,CAApB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n\n            );\n        });\n\n    }\n\n    render() {\n        //console.log(this.props.streams);\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n    \n}\n\nconst mapToStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),//Object to Array\n        currentUserId: state.auth.userId \n    };\n};\n\nexport default connect(mapToStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}