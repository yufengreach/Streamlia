{"ast":null,"code":"var _jsxFileName = \"/Users/yufengliureach/projects/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Create Stream\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    //console.log(this.props.streams);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapToStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    //Object to Array\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapToStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/yufengliureach/projects/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderCreate","isSignedIn","textAlign","renderList","streams","map","id","title","description","render","mapToStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC5C,aACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADJ;AAUH;AACJ;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AACvB,aACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAQH;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKR,KAAL,CAAWS,OAAX,CAAmBC,GAAnB,CAAwBR,MAAD,IAAY;AACtC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACS,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,WAAL,CAAiBC,MAAjB,CADL,EAEI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MAAM,CAACU,KADZ,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BV,MAAM,CAACW,WAArC,CAFJ,CAHJ,CADJ;AAWH,KAZM,CAAP;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKN,UAAL,EAAjC,CAFJ,EAGK,KAAKH,YAAL,EAHL,CADJ;AAOH;;AA3DoC;;AA+DzC,MAAMU,iBAAiB,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADN;AACmC;AACtCL,IAAAA,aAAa,EAAEY,KAAK,CAACG,IAAN,CAAWhB,MAFvB;AAGHG,IAAAA,UAAU,EAAEU,KAAK,CAACG,IAAN,CAAWb;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAeZ,OAAO,CAACqB,iBAAD,EAAoB;AAAEnB,EAAAA;AAAF,CAApB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                  <button className=\"ui button primary\">\n                    Edit\n                  </button>\n                  <button className=\"ui button negative\">\n                    Delete\n                  </button>\n                </div>\n            );\n        }\n    }\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{textAlign: 'right'}}>\n                    <Link to='/streams/new' className=\"ui button primary\">\n                      Create Stream\n                    </Link>\n                </div>\n            );\n\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n\n            );\n        });\n\n    }\n\n    render() {\n        //console.log(this.props.streams);\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n    \n}\n\nconst mapToStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),//Object to Array\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapToStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}