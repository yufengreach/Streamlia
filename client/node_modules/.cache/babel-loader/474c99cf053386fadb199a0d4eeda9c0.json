{"ast":null,"code":"import _objectSpread from \"/Users/yufengliureach/projects/streams/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    case FETCH_STREAMS:\n      return _objectSpread({}, state, _.mapKeys(action.payload, 'id'));\n\n    case CREATE_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    case EDIT_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/yufengliureach/projects/streams/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","state","action","type","payload","id","mapKeys","omit"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACIC,aADJ,EAEIC,YAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,WALJ,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAL;AACE,+BAAWI,KAAX;AAAkB,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAA9C;;AACF,SAAKN,aAAL;AACE,+BAAYG,KAAZ,EAAsBN,CAAC,CAACW,OAAF,CAAUJ,MAAM,CAACE,OAAjB,EAA0B,IAA1B,CAAtB;;AACF,SAAKR,aAAL;AACE,+BAAYK,KAAZ;AAAmB,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAA/C;;AACF,SAAKL,aAAL;AACE,aAAOJ,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACF,SAAKJ,WAAL;AACE,+BAAYC,KAAZ;AAAmB,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAA/C;;AACF;AACE,aAAOH,KAAP;AAZN;AAcH,CAfD","sourcesContent":["import _ from 'lodash';\nimport {\n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STREAM:\n          return {...state, [action.payload.id]: action.payload};\n        case FETCH_STREAMS:\n          return { ...state, ..._.mapKeys(action.payload, 'id')};\n        case CREATE_STREAM:\n          return { ...state, [action.payload.id]: action.payload };\n        case DELETE_STREAM:\n          return _.omit(state, action.payload);\n        case EDIT_STREAM:\n          return { ...state, [action.payload.id]: action.payload };\n        default:\n          return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}